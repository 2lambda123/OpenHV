name: Deploy Documentation

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git Tag'
        required: true

jobs:
  wiki:
    name: Update Wiki
    if: github.repository == 'openhv/openhv'
    runs-on: ubuntu-20.04
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Prepare Environment
        run: |
          make all

      - name: Clone Wiki
        uses: actions/checkout@v2
        with:
          repository: openhv/openhv.wiki
          token: ${{ secrets.DOCS_TOKEN }}
          path: wiki

      - name: Update Wiki
        env:
          GIT_TAG: ${{ github.event.inputs.tag }}
        run: |
          ./utility.sh --settings-docs "${GIT_TAG}" > "wiki/Settings.md.in"
          sed "s/Game.Mod=ra/Game.Mod=hv/g" "wiki/Settings.md.in" | sed "s/OpenRA main directory/OpenHV main directory/g" | sed "s/of OpenRA/of OpenHV using the OpenRA engine/g" | sed "s/\`\`\`yaml/\`\`\`salt/g"  > "wiki/Settings.md"

      - name: Push Wiki
        env:
          GIT_TAG: ${{ github.event.inputs.tag }}
        run: |
          cd wiki
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add --all
          git commit -m "Update auto-generated documentation for ${GIT_TAG}"
          git push origin master

  docs:
    name: Update openhv.readthedocs.io
    if: github.repository == 'openhv/openhv'
    runs-on: ubuntu-20.04
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Prepare Environment
        run: |
          make all

      - name: Clone OpenHV docs
        uses: actions/checkout@v2
        with:
          repository: openhv/docs
          token: ${{ secrets.DOCS_TOKEN }}
          path: docs



      - name: Update openhv/docs
        env:
          GIT_TAG: ${{ github.event.inputs.tag }}
        run: |
          ./utility.sh --docs "${GIT_TAG}" > "traits.md"
          sed "s/of OpenRA/of OpenHV/g" "traits.md"  > "docs/api/release/traits.md"
          sed -i '/^## /d' docs/api/release/traits.md
          ./utility.sh --weapon-docs "${GIT_TAG}" > "weapons.md"
          sed "s/of OpenRA/of OpenHV/g" "weapons.md" > "docs/api/release/weapons.md"
          sed -i '/^## /d' docs/api/release/weapons.md
          ./utility.sh --lua-docs "${GIT_TAG}" > "lua.md"
          sed "s/of OpenRA/of OpenHV/g" "lua.md" | sed "s/OpenRA allows/OpenHV allows/g"  > "docs/api/release/lua.md"

      - name: Push openhv/docs
        env:
          GIT_TAG: ${{ github.event.inputs.tag }}
        run: |
          cd docs
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add --all
          git commit -m "Update auto-generated documentation for ${GIT_TAG}"
          git push origin master

